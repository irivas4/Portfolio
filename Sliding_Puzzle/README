// Aiden Kim akim154
// Itel Rivas irivas4

Both members contributed to the implementation of everything but we did have some focus areas. In particular, Itel focused on the helper functions associated with the C, T, I, W, V, and Q commands. Aiden focused on the helper functions associated with P, K, and S as well as the structure of the main file puzzle.c where all the helper functions are called. We know the V command does work but when solving an 8 puzzle similar to the one where the V command was described it took at first 82 moves and after some configuration we were able to get that down to 51. We made the V command more effecient by having a last step parameter to make sure if I just tried an up the function does also try and up and the same for left and right. For the W function the way we implemented it, was we got the start index of two places, the first was of the copy I made were I would map pixel information from the original. The second place was the start index of the original image. It would then copy the amount of rows and columns divided by the size of the puzzle to the copy. The copy would then be written to the PPM file inputed. At first, we were planning on writing two cases in the main function: one that would handle an input file, and one that would use stdin. However, after realizing how inefficient that would be with all the reused code, we decided to have just one case to account for file input. If a user were to use stdin, however, we would create a file to hold stdin. This made it so that we only needed one case instead of two very similar cases. 